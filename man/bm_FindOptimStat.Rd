% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bm_FindOptimStat.R
\name{bm_FindOptimStat}
\alias{bm_FindOptimStat}
\alias{bm_CalculateStat}
\alias{get_optim_value}
\title{Calculate the best score according to a given evaluation method}
\usage{
bm_FindOptimStat(
  Stat = "TSS",
  Fit,
  Obs,
  Nb.thresh.test = 100,
  Fixed.thresh = NULL
)
}
\arguments{
\item{Stat}{a \code{character} corresponding to the evaluation metric to be used, must be 
either \code{ROC}, \code{TSS}, \code{KAPPA}, \code{ACCURACY}, \code{BIAS}, \code{POD}, 
\code{FAR}, \code{POFD}, \code{SR}, \code{CSI}, \code{ETS}, \code{HK}, \code{HSS}, \code{OR} 
or \code{ORSS}}

\item{Fit}{a \code{vector} of fitted values (continuous)}

\item{Obs}{a \code{vector} of observed values (binary, \code{0} or \code{1})}

\item{Nb.thresh.test}{an \code{integer} corresponding to the number of thresholds to be 
tested over the range of fitted values}

\item{Fixed.thresh}{(\emph{optional, default} \code{NULL}) \cr 
An \code{integer} corresponding to the only threshold value to be tested}
}
\value{
A \code{1} row x \code{4} columns \code{matrix} containing :
\itemize{
  \item{\code{best.iter}}{ : the best score obtained for the chosen evaluation metric}
  \item{\code{cutoff}}{ : the associated cut-off used to transform the continuous values into 
  binary}
  \item{\code{sensibility}}{ : the sensibility obtained on fitted values with this threshold}
  \item{\code{specificity}}{ : the specificity obtained on fitted values with this threshold}
}
}
\description{
This internal \pkg{biomod2} function allows the user to find the threshold to convert 
continuous values into binary ones leading to the best score for a given evaluation metric.
}
\details{
\emph{Please refer to \code{\link{BIOMOD_Modeling}} to get more information about these 
evaluation metrics.}

Note that if a value is given to \code{Fixed.thresh}, no optimisation will be done., and 
only the score for this threshold will be returned.
}
\examples{

## generate a binary vector
a <- sample(c(0, 1), 100, replace = TRUE)

## random drawing
b <- runif(100, min = 0, max = 1000)
bm_FindOptimStat(Stat = 'TSS', Fit = b, Obs = a)

## biased drawing
BiasedDrawing <- function(x, m1 = 300, sd1 = 200, m2 = 700, sd2 = 200) {
  return(ifelse(x < 0.5, rnorm(1, m1, sd1), rnorm(1, m2, sd2)))
}
c <- sapply(a, BiasedDrawing)
bm_FindOptimStat(Stat = 'TSS', Fit = c, Obs = a, Nb.thresh.test = 100)


}
\seealso{
\code{\link{BIOMOD_Modeling}}, \code{\link{BIOMOD_EnsembleModeling}}
}
\author{
Damien Georges
}
\keyword{evaluation}
\keyword{models,}
\keyword{options,}
