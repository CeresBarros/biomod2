% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bm_SampleFactorLevels.R
\name{bm_SampleFactorLevels}
\alias{bm_SampleFactorLevels}
\alias{bm_SampleFactorLevels.raster}
\alias{bm_SampleFactorLevels.data.frame}
\title{Tool to ensure the sampling of all levels of a factorial variable}
\usage{
bm_SampleFactorLevels(x, mask.out = NULL, mask.in = NULL)
}
\arguments{
\item{x}{a \code{data.frame} or \code{\link[raster:stack]{RasterStack}} object containing the 
explanatory variables (in columns or layers)}

\item{mask.out}{a \code{data.frame} or \code{\link[raster:raster]{raster}} object containing 
the area that has already been sampled (\emph{factor levels within this mask will not be 
sampled})}

\item{mask.in}{a \code{data.frame}, \code{\link[raster:raster]{raster}} or 
\code{\link[raster:stack]{RasterStack}} object containing areas where factor levels are to be 
sampled in priority. \emph{Note that if after having explored these masks, some factor levels 
remain unsampled, they will be sampled in the reference input object \code{x}.}}
}
\value{
A \code{numeric vector} containing point IDs (either cell number for \code{raster*} objects, 
or row number for \code{data.frame}), each refering to a single level of a single factorial 
variable.

In case any factorial variable is found in the input object, \code{NULL} is returned.
}
\description{
This internal \pkg{biomod2} function samples randomly an element of each level of 
all the factorial variables contained in a \code{raster*} or \code{data.frame} object.
}
\details{
The \code{x}, \code{mask.out} and \code{mask.in} parameters must be coherent in terms of 
dimensions :
\itemize{
  \item same number of rows for \code{data.frame} objects
  \item same resolution, projection system and number of cells for \code{raster*} objects 
  \cr \cr
}

If \code{mask.in} contains several masks (either it is a 
\code{\link[raster:stack]{RasterStack}} object or a multi-columns \code{data.frame}), then 
the order of masks / columns matters : they will be considered successively to sample missing 
factor levels. \cr \cr

\itemize{
  \item \code{raster*} masks will be understood as :
  \itemize{
    \item \code{NA} : out of mask
    \item \code{not NA} : in mask
  }
  \item \code{data.frame} masks will be understood as :
  \itemize{
    \item \code{FALSE} : out of mask
    \item \code{TRUE} : in mask
  }
}
}
\examples{

## Example with raster* object ----------------------------------

library(raster)

## create a factorial raster
r1 <- raster()
r1[] <- 1; r1[1] <- 2; r1[2:3] <- 3
r1 <- as.factor(r1)

## create a continuous raster
r2 <- raster()
r2[] <- rnorm(ncell(r2))

## put the raster into a RasterStack
stk <- stack(r1, r2)
is.factor(stk)

## define a mask for already sampled points
mask.out <- r1
mask.out[] <- NA; mask.out[2:3] <- 1

## define a list of masks where we want to sample in priority
mask.in.1 <- mask.in.2 <- r1
mask.in.1[1:10] <- NA ## only level 1 should be sampled in this mask
mask.in.2[1] <- NA ## only levels 1 and 3 should be sampled in this mask
mask.in <- list(mask.in.1 = mask.in.1, 
                mask.in.2 = mask.in.2)

## test different version of the function
bm_SampleFactorLevels(stk, mask.out = mask.out)
bm_SampleFactorLevels(stk, mask.in = mask.in)
bm_SampleFactorLevels(stk, mask.out = mask.out, mask.in = mask.in)


}
\seealso{
\code{\link{bm_PseudoAbsences}}, \code{\link{bm_RunModelsLoop}}, 
\code{\link{BIOMOD_Modeling}}

Other Secundary functions: 
\code{\link{bm_BinaryTransformation}()},
\code{\link{bm_CVnnet}()},
\code{\link{bm_FindOptimStat}()},
\code{\link{bm_MakeFormula}()},
\code{\link{bm_PlotEvalBoxplot}()},
\code{\link{bm_PlotEvalMean}()},
\code{\link{bm_PlotRangeSize}()},
\code{\link{bm_PlotResponseCurves}()},
\code{\link{bm_PlotVarImpBoxplot}()},
\code{\link{bm_PseudoAbsences}()},
\code{\link{bm_Rescaler}()},
\code{\link{bm_RunModelsLoop}()},
\code{\link{bm_SRE}()},
\code{\link{bm_SampleBinaryVector}()},
\code{\link{bm_VariablesImportance}()}
}
\author{
Damien Georges
}
\concept{Secundary functions}
